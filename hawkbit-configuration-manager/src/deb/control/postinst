#!/bin/bash
# postinst script for arrowhead-hawkbitconfigurationmanager
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule

SYSTEM_NAME="hawkbitconfigurationmanager"
PKG_NAME="arrowhead-hawkbit-configuration-manager"

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
  configure)
    dos2unix -q /etc/systemd/system/${PKG_NAME}.service

    . /usr/share/arrowhead/conf/ahconf.sh

    SYSTEM_DIR="${AH_SYSTEMS_DIR}/${SYSTEM_NAME}"

    systems="$(ah_get_conf_prop systems)"
    if [[ "${systems}" != *"${SYSTEM_NAME}"* ]]; then
      systems="${systems}${SYSTEM_NAME} "
    fi
    ah_set_conf_prop systems "${systems}"

    if [ ! -d "${SYSTEM_DIR}" ]; then
      mkdir -p ${SYSTEM_DIR}
    fi

    domain_name=${AH_DOMAIN_NAME}
    if [ -z ${domain_name} ]; then
      domain_name=${OWN_IP}
    fi

    ah_cert_signed_system ${SYSTEM_NAME} 

    # modify log config and application.properties

    ah_transform_log_file ${SYSTEM_DIR}

    db_get arrowhead-core-common/sr_host; sr_host=$RET || true

    if [ -z ${sr_host} ]; then
      sr_host=${OWN_IP}
    fi
	
	db_get arrowhead-core-common/provided_service_definition; provided_service_definition=$RET || true
	db_get arrowhead-core-common/provided_service_uri; provided_service_uri=$RET || true
	db_get arrowhead-core-common/provided_service_version; provided_service_version=$RET || true
	db_get arrowhead-core-common/provided_service_interface; provided_service_interface=$RET || true
	
	db_get arrowhead-core-common/hawkbit_host; hawkbit_host=$RET || true
	db_get arrowhead-core-common/hawkbit_port; hawkbit_port=$RET || true
	db_get arrowhead-core-common/hawkbit_username; hawkbit_username=$RET || true
	db_get arrowhead-core-common/hawkbit_password; hawkbit_password=$RET || true
    db_unregister arrowhead-core-common/hawkbit_password
	db_get arrowhead-core-common/hawkbit_tenant; hawkbit_tenant=$RET || true

    mv ${SYSTEM_DIR}/application.properties ${SYSTEM_DIR}/application.properties.orig
    cat ${SYSTEM_DIR}/application.properties.orig | \
      sed -r -e "\#^.*system\.address=#s#.*\$#system.address=${domain_name}#" \
      -e "\#^.*sr_address=#s#.*\$#sr_address=${sr_host}#" \
      -e "\#^.*system\.providedServiceInterface=#s#.*\$#system.providedServiceInterface=${provided_service_interface}#" \
      -e "\#^.*system\.providedServiceDefinition=#s#.*\$#system.providedServiceDefinition=${provided_service_definition}#" \
      -e "\#^.*system\.providedServiceUri=#s#.*\$#system.providedServiceUri=${provided_service_uri}#" \
      -e "\#^.*system\.providedServiceVersion=#s#.*\$#system.providedServiceVersion=${provided_service_version}#" \
      -e "\#^.*hawkbit\.host=#s#.*\$#hawkbit.host=${hawkbit_host}#" \
      -e "\#^.*hawkbit\.port=#s#.*\$#hawkbit.port=${hawkbit_port}#" \
      -e "\#^.*hawkbit\.username=#s#.*\$#hawkbit.username=${hawkbit_username}#" \
      -e "\#^.*hawkbit\.password=#s#.*\$#hawkbit.password=${hawkbit_password}#" \
      -e "\#^.*hawkbit\.tenant=#s#.*\$#hawkbit.tenant=${hawkbit_tenant}#" \
      -e "\#^.*server\.ssl\.key-store=#s#.*\$#server.ssl.key-store=file:${SYSTEM_DIR}/${SYSTEM_NAME}.p12#" \
      -e "\#^.*server\.ssl\.key-store-password=#s#.*\$#server.ssl.key-store-password=${AH_PASS_CERT}#" \
      -e "\#^.*server\.ssl\.key-password=#s#.*\$#server.ssl.key-password=${AH_PASS_CERT}#" \
      -e "\#^.*server\.ssl\.trust-store=#s#.*\$#server.ssl.trust-store=file:${AH_CONF_DIR}/truststore.p12#" \
      -e "\#^.*server\.ssl\.trust-store-password=#s#.*\$#server.ssl.trust-store-password=${AH_PASS_CERT}#" > ${SYSTEM_DIR}/application.properties

    rm ${SYSTEM_DIR}/application.properties.orig
    chown arrowhead:arrowhead ${SYSTEM_DIR}/application.properties
    chmod 640 ${SYSTEM_DIR}/application.properties

    echo "Starting ${PKG_NAME}..." >&2
    systemctl daemon-reload
    systemctl enable ${PKG_NAME}.service
    systemctl start ${PKG_NAME}.service
    ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
